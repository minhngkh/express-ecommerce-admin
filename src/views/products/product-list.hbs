<main
  x-init="$store.sidebar.selected = 'Products'; $store.sidebar.page='Manage products'"
  class="p-6"
>
  <h2 class="mb-8 p-1 text-xl font-bold text-gray-900 dark:text-white">
    Product list
  </h2>

  <div class="flex flex-col">
    <div
      :class="$store.products.isEmpty() ? 'pb-40' : ''"
      class="-m-1.5 overflow-x-auto"
    >
      <div class="inline-block min-w-full p-1.5 align-middle">
        <div
          class="divide-y divide-gray-200 rounded-lg border dark:divide-gray-700 dark:border-gray-700"
        >
          <!-- Search & sort -->
          <form
            id="search-form"
            x-data="{ 
              name: '{{query.name}}',
              categoryId: '{{query.categoryId}}',
              subcategoryIds: {{toStringList query.subcategoryIds}},
              brandIds: {{toStringList query.brandIds}},
              status: '{{query.status}}',
              sort: '{{query.sort}}',
            }"
            action="/products/"
            method="get"
            class="m-0 flex items-center gap-x-4 p-3"
          >
            <!-- Select: sort -->
            <div class="relative">
              <select
                x-model="sort"
                name="sort"
                class="block w-full rounded-lg border-gray-200 px-3 py-2 pe-9 text-sm focus:border-teal-500 focus:ring-teal-500 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-700 dark:bg-slate-900 dark:text-gray-400 dark:focus:ring-gray-600"
              >
                <option value="creation-asc">Creation time (asc)</option>
                <option value="creation-desc">Creation time (desc)</option>
                <option value="price-asc">Price (asc)</option>
                <option value="price-desc">Price (desc)</option>
                <option value="purchases-asc">Total purchases (asc)</option>
                <option value="purchases-desc">Total purchases (desc)</option>
              </select>
            </div>
            <!-- Select: sort -->

            <!-- Select: category -->
            <div class="relative">
              <select
                @change="subcategoryIds = []"
                x-model="categoryId"
                :name="categoryId ? 'category' : ''"
                class="block w-full rounded-lg border-gray-200 px-3 py-2 pe-9 text-sm focus:border-teal-500 focus:ring-teal-500 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-700 dark:bg-slate-900 dark:text-gray-400 dark:focus:ring-gray-600"
              >
                <option value="">All</option>
                {{#each filter.categories}}
                  <option value="{{id}}">{{name}}</option>
                {{/each}}
              </select>
            </div>
            <!-- Select: category -->

            <!-- Checkboxes: subcategory -->
            <div x-data="{ isOpen: false }" class="relative overflow-visible">
              <button
                :disabled="!categoryId"
                @click="isOpen = !isOpen"
                type="button"
                class="flex w-full cursor-pointer items-center justify-between gap-2 rounded-lg border border-gray-200 bg-white px-3 py-2 text-gray-900 transition focus:border-teal-500 focus:ring-1 focus:ring-teal-500 disabled:pointer-events-none disabled:opacity-50"
              >
                <span class="text-sm"> Subcategory </span>

                <span class="relative w-6">
                  <p
                    :class="subcategoryIds.length ? '' : 'hidden'"
                    class="absolute top-1/2 inline-block h-6 w-6 -translate-x-1/2 -translate-y-1/2 whitespace-pre rounded-full bg-teal-600 py-1 text-center text-xs text-white"
                    x-text="`${subcategoryIds.length}`"
                  ></p>
                </span>

                <span class="transition" :class="{ '-rotate-180': isOpen }">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="h-4 w-4"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                    />
                  </svg>
                </span>
              </button>

              <div
                x-cloak
                x-show="isOpen && categoryId"
                x-on:keydown.escape.window="isOpen = false"
                class="absolute mt-3 min-w-full border-gray-200 dark:border-gray-700 dark:bg-gray-900"
              >
                <ul
                  class="top-full z-10 space-y-1 rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700"
                >
                  {{#each filter.subcategories}}
                    <li x-show="categoryId === '{{categoryId}}'">
                      <label
                        for="{{id}}"
                        class="inline-flex items-center gap-2"
                      >
                        <input
                          x-model="subcategoryIds"
                          type="checkbox"
                          id="{{id}}"
                          value="{{id}}"
                          class="h-5 w-5 rounded border-gray-300 text-teal-500 focus:ring-teal-500 dark:border-gray-600 dark:bg-gray-900 dark:focus:ring-offset-gray-900"
                        />

                        <span
                          class="text-sm font-medium text-gray-700 dark:text-gray-200"
                        >
                          {{name}}
                        </span>
                      </label>
                    </li>
                  {{/each}}
                </ul>
              </div>

              <input
                class="hidden"
                name="subcategory"
                :value="subcategoryIds"
                :disabled="!subcategoryIds.length"
              />
            </div>
            <!-- Checkboxes: subcategory -->

            <!-- Checkboxes: brand -->
            <div x-data="{ isOpen: false }" class="relative overflow-visible">
              <button
                @click="isOpen = !isOpen"
                type="button"
                class="flex w-full cursor-pointer items-center justify-between gap-2 rounded-lg border border-gray-200 bg-white px-3 py-2 text-gray-900 transition focus:border-teal-500 focus:ring-1 focus:ring-teal-500 disabled:pointer-events-none disabled:opacity-50"
              >
                <span class="text-sm"> Brand </span>

                <span class="relative w-6">
                  <p
                    :class="brandIds.length ? '' : 'hidden'"
                    class="absolute top-1/2 inline-block h-6 w-6 -translate-x-1/2 -translate-y-1/2 whitespace-pre rounded-full bg-teal-600 py-1 text-center text-xs text-white"
                    x-text="`${brandIds.length}`"
                  ></p>
                </span>

                <span class="transition" :class="{ '-rotate-180': isOpen }">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="h-4 w-4"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                    />
                  </svg>
                </span>
              </button>

              <div
                x-cloak
                x-show="isOpen"
                x-on:keydown.escape.window="isOpen = false"
                class="absolute mt-3 min-w-full border-gray-200 dark:border-gray-700 dark:bg-gray-900"
              >
                <ul
                  class="top-full z-10 space-y-1 rounded-lg border border-gray-200 bg-white p-4 shadow-sm dark:border-gray-700"
                >
                  {{#each filter.brands}}
                    <li>
                      <label
                        for="{{name}}"
                        class="inline-flex items-center gap-2"
                      >
                        <input
                          x-model="brandIds"
                          type="checkbox"
                          id="{{name}}"
                          value="{{id}}"
                          class="h-5 w-5 rounded border-gray-300 text-teal-500 focus:ring-teal-500 dark:border-gray-600 dark:bg-gray-900 dark:focus:ring-offset-gray-900"
                        />

                        <span
                          class="text-sm font-medium text-gray-700 dark:text-gray-200"
                        >
                          {{name}}
                        </span>
                      </label>
                    </li>
                  {{/each}}
                </ul>
              </div>

              <input
                class="hidden"
                name="brand"
                :value="brandIds"
                :disabled="!brandIds.length"
              />
            </div>
            <!-- Checkboxes: brand -->

            <!-- Search: name -->
            <div>
              <div class="relative max-w-xs">
                <label class="sr-only">Search</label>
                <input
                  x-model="name"
                  :name="name ? 'name' : ''"
                  type="search"
                  class="block w-full rounded-lg border-gray-200 px-3 py-2 ps-9 text-sm shadow-sm focus:z-10 focus:border-teal-500 focus:ring-teal-500 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-700 dark:bg-slate-900 dark:text-gray-400 dark:focus:ring-gray-600"
                  placeholder="Name"
                />
                <div
                  class="pointer-events-none absolute inset-y-0 start-0 flex items-center ps-3"
                >
                  <svg
                    class="h-4 w-4 text-gray-400"
                    xmlns="http://www.w3.org/2000/svg"
                    width="24"
                    height="24"
                    viewBox="0 0 24 24"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  ><circle cx="11" cy="11" r="8" /><path d="m21 21-4.3-4.3" />
                  </svg>
                </div>
              </div>
            </div>
            <!-- Search: name -->

            <button
              type="submit"
              class="px-2 text-sm font-medium text-teal-600 underline-offset-2 hover:underline"
            >
              Apply
            </button>

          </form>
          <!-- Search & sort -->

          <!-- Table -->
          <div class="overflow-hidden">
            <table
              class="min-w-full table-fixed divide-y divide-gray-200 dark:divide-gray-700"
            >
              <thead class="bg-gray-50 dark:bg-gray-700">
                <tr>
                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Name</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Category</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Subcategory</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Brand</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Price</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Status</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Creation time</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Total purchases</th>

                  <th
                    scope="col"
                    class="px-6 py-3 text-center text-xs font-medium uppercase text-gray-500 dark:text-gray-400"
                  >Action</th>
                </tr>
              </thead>

              <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
                <template
                  x-for="product in $store.products.list"
                  :key="product.id"
                >
                  <tr>
                    <td
                      class="whitespace-nowrap px-6 py-4 text-sm font-medium text-gray-800 dark:text-gray-200"
                    >
                      <div class="flex items-center gap-x-4">
                        <img
                          class="aspect-[3/2] w-14 rounded-md object-cover"
                          :src="product.image ? product.image : '/images/placeholder/product.png'"
                          alt="Product image"
                          onerror="this.onerror=null; this.src='/images/placeholder/product.png';"
                        />
                        <p x-text="product.name"></p>
                      </div>
                    </td>

                    <td
                      x-text="product.category"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      x-text="product.subcategory"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      x-text="product.brand"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      x-text="product.price"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      x-text="product.status"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      x-text="toLocalDate(product.createdAt)"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      x-text="product.purchases"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm text-gray-800 dark:text-gray-200"
                    ></td>

                    <td
                      class="w-24 whitespace-nowrap px-6 py-4 text-center text-sm font-medium"
                    >
                      <a
                        :href="`/products/${categoryPath[product.category]}/${product.id}`"
                        type="button"
                        class="inline-flex items-center rounded-lg border border-transparent px-2 text-sm font-semibold text-teal-600 hover:text-teal-800 disabled:pointer-events-none disabled:opacity-50 dark:text-teal-500 dark:hover:text-teal-400 dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600"
                      >Details</a>
                    </td>
                  </tr>
                </template>

                <template x-if="$store.products.isEmpty()">
                  <tr>
                    <td
                      colspan="9"
                      class="whitespace-nowrap px-6 py-4 text-center text-sm font-medium text-gray-800 dark:text-gray-200"
                    >No products found</td>
                  </tr>
                </template>
              </tbody>
            </table>
          </div>
          <!-- Table -->

          <!-- Pagination -->
          <div
            x-show="!$store.products.isEmpty()"
            class="grid place-items-center p-3"
          >
            <nav class="inline-flex items-center justify-center gap-3">
              <!-- Button: previous page -->
              <button
                @click="$store.products.update(await $store.page.go($store.page.prev));"
                :disabled="!$store.page.prev"
                class="inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180 dark:border-gray-800 dark:bg-gray-900 dark:text-white"
              >
                <span class="sr-only">Previous Page</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-3 w-3"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                    clip-rule="evenodd"
                  />
                </svg>
              </button>
              <!-- Previous Page -->

              <!-- Current Page -->
              <p class="text-xs text-gray-900 dark:text-white">
                <span x-text="$store.page.current"></span>
                <span class="mx-0.25">/</span>
                <span x-text="$store.page.total"></span>
              </p>
              <!-- Current Page -->

              <!-- Next Page -->
              <button
                @click="$store.products.update(await $store.page.go($store.page.next));"
                :disabled="!$store.page.next"
                class="inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180 dark:border-gray-800 dark:bg-gray-900 dark:text-white"
              >
                <span class="sr-only">Next Page</span>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-3 w-3"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                    clip-rule="evenodd"
                  />
                </svg>
              </button>
              <!-- Button: next page -->
            </nav>
          </div>
          <!-- Pagination -->
        </div>
      </div>
    </div>
  </div>
</main>

{{! prettier-ignore }}
{{#content "script"}}
  <script>
    document.addEventListener("alpine:init", () => {
      Alpine.store("products", {
        init() {
          window.addEventListener("popstate", (event) => {
            this.list = event.state.products;
          });
        },

        list: {{{toString products}}},

        isEmpty() {
          return this.list.length === 0;
        },

        update(products) {
          this.list = products;
        },
      });

      Alpine.store("page", {
        init() {
          this.total = {{page.total}};
          this.current = {{page.current}};

          window.addEventListener("popstate", (event) => {
            this.total = event.state.total;
            this.current = event.state.current;
          });
        },

        total: null,
        current: null,

        get prev() {
          return this.current > 1 ? this.current - 1 : null;
        },

        get next() {
          return this.current < this.total ? this.current + 1 : null;
        },

        async go(page) {
          const searchParams = new URL(document.location).searchParams;
          searchParams.set("page", page);
          const queryString = searchParams.toString();

          try {
            const result = await fetch(`/api/products?${queryString}`);

            if (result.ok) {
              const data = await result.json();

              history.pushState(data, "", window.location.href);

              this.total = data.total;
              this.current = data.current;

              return data.productList;
            }
          } catch (err) {
            toast("Something went wrong", { type: "danger"})
            console.log(err);
          }
        }
      });
    });

    const categoryPath = {{{toString categoryPath}}};
  </script>
{{/content}}